//------------------------------------------------------------//
// never type
// 실제로 사용할 일은 없고, 등장 했을 때 이유를 알면 됨
//------------------------------------------------------------//
// function return 값에 붙일 수 있는 never type
// 조건 1. return 값이 없어야함
// 조건 2. 함수실행이 끝나지 않아야 함 (endpoint 없어야함)
// 끝나지 않는 함수(= endpoint가 없는 함수) ???
// (1)
function 네버1() {
    throw new Error(); // 크롬 콘솔창에서 빨간 에러 / 에러 발생하면 코드 실행중단됨
}
네버1();
// (2)
function 네버2() {
    while (true) { // true일동안 while 반복문 돌아가기 때문에 무한반복으로 끝나지 않음
        console.log(1);
    }
}
네버2();
//------------------------------------------------------------//
// 실제 코딩하면서 never type 사용?
// - 대부분 쓸 일 없음. :void 사용하면 됨
//------------------------------------------------------------//
// never 타입 등장하는 경우
// 1. 뭔가 이상한 narrowing
// 2. 어떤 함수표현식은 return 타입이 자동으로 never
//------------------------------------------------------------//
//[1]
function 네버3(a) {
    if (typeof a === 'string') {
        console.log(a); //여기서 파라미터 a는 string type
    }
    else {
        console.log(a); //여기서 파라미터 a는 never : 있을 수 없다~ / 왜냐하면 파라미터 자체를 string만 받는데 else가 있을 수 없음.
        // 사실 위에서 :never도 있을 수 없다~, 그럴 일이 없다~ 라는 뜻이긴함
    }
}
//------------------------------------------------------------//
//[2]
// unreachable code 떠서 작동 X
// >>> 위의 :never 전부다 주석 처리하면 제대로 작동
// 코드 마우스오버하면 :never 
var 네버4 = function () {
    throw new Error();
};
네버4();
