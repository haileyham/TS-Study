React에서 Redux 쓰는이유
1. 모든 컴포넌트가 state 공유가능
2. 수정방법을 파일 한 곳에 정의해둠

//------------------------------------------------------------//

설치
npm install redux react-redux (예전)
npm install @reduxjs/toolkit (리덕스툴킷)

//------------------------------------------------------------//
//------------------------------------------------------------//

리덕스툴킷

[내 이해 돕기 위한 설명]
1. index.tsx 작성 (createSlice : state + reducer 합친것)
> 예전에 파일 나눠서 import 했던거 그냥 index.tsx에 한번에 넣기
(app.js랑 store, slice, index.js 나눠서 작성한것을 index.js에 다 집어넣었다고 생각하면됨)
> store, slice, index.js => index.tsx에 한번에
> app.js > app.tsx 에 작성



action : PayloadAction<number> // dispatch()할 때 number날리려고


//------------------------------------------------------------//

이 문법의 좋은점
1. 함수라 보기 좋음
2. state 수정시 사본만들 필요 없음

//------------------------------------------------------------//

2. state 꺼낼 때는
app.tsx 작성


//------------------------------------------------------------//
나중에 실습 다시
//------------------------------------------------------------//


1. createSlice() 로 slice 라는걸 만들어줍니다. slice는 state와 reducer를 합쳐놓은 새로운 뭉텅이라고 보시면 됩니다.

2. slice 안에는 slice 이름, state초기값, reducer가 정확한 이름으로 들어가야합니다. 맘대로 작명 불가 

3. state는 그냥 맘대로 만드시면 되고 reducer는 함수 형태로 만들어주면 됩니다. 첫 파라미터는 state, 둘째는 actions가 자동으로 부여됩니다. 

4. 다 만든 것들은 configureStore 안에 등록하면 됩니다. 

5. 내가 만들어둔 reducer를 쓰고 싶으면 reducer 안의 함수명을 export 해주시면 됩니다. 

6. 나머지는 필요없는 셋팅문법임 

//------------------------------------------------------------//

타입지정은

(1) state 초기값 타입지정 알아서 해주십시오

(2) reducer 안의 action 파라미터의 타입지정 해주십시오 

(3) 나머지는 타입지정 필요없습니다. 자동